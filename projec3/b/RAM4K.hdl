// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8);
    RAM512(in=in, load=out1, address=address[0..8], out=ram1Out);
    RAM512(in=in, load=out2, address=address[0..8], out=ram2Out);
    RAM512(in=in, load=out3, address=address[0..8], out=ram3Out);
    RAM512(in=in, load=out4, address=address[0..8], out=ram4Out);
    RAM512(in=in, load=out5, address=address[0..8], out=ram5Out);
    RAM512(in=in, load=out6, address=address[0..8], out=ram6Out);
    RAM512(in=in, load=out7, address=address[0..8], out=ram7Out);
    RAM512(in=in, load=out8, address=address[0..8], out=ram8Out);
    Mux8Way16(a=ram1Out, b=ram2Out, c=ram3Out, d=ram4Out, e=ram5Out, f=ram6Out, g=ram7Out, h=ram8Out, sel=address[9..11], out=out);
}